

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum AccountStatus {
  PENDING
  ACTIVE
  INACTIVE
  SUSPENDED
}
enum LoginAttempt {
  SUCCESS
  FAILURE
}


enum VerificationStatus {
  PENDING
  VERIFIED
  EXPIRED
}

enum VerificationCodeType {
  
  ACCOUNT_ACTIVATION
  PASSWORD_RESET
  EMAIL_CHANGE
  TWO_FACTOR_AUTH
  PHONE_CHANGE
  TWO_FACTOR_AUTH_DISABLE
}

model User {
  id        String   @id @default(cuid())
  name String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  verified  Boolean  @default(false)
  status AccountStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  loginHistories LoginHistoryy[]
  verificationCodes VerificationCode[]
}



model LoginHistoryy {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  ipAddress String?
  userAgent String?
  attempt LoginAttempt @default(SUCCESS)
  loginAt DateTime @default(now())

}

model VerificationCode {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  status VerificationStatus @default(PENDING)

  code String
  type VerificationCodeType @default(ACCOUNT_ACTIVATION)
  issuedAt DateTime @default(now())

  expiresAt DateTime
  verifiedAt DateTime?
  createdAt DateTime @default(now())
}